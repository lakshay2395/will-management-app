/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

rule NetworkAdminUser {
    description: "Grant business network administrators full access to user resources"
    participant: "org.hyperledger.composer.system.NetworkAdmin"
    operation: ALL
    resource: "**"
    action: ALLOW
}

rule NetworkAdminSystem {
    description: "Grant business network administrators full access to system resources"
    participant: "org.hyperledger.composer.system.NetworkAdmin"
    operation: ALL
    resource: "org.hyperledger.composer.system.**"
    action: ALLOW
}

rule NetworkAdminPermissionSystem {
  description: "Can READ all system resources"
  participant: "ANY"
  operation: READ
  resource: "org.hyperledger.composer.system.**"
  action: ALLOW
}

rule ParticipantPermissionHistorian{
  description: "can write historian record to Historian"
  participant: "ANY"
  operation: CREATE
  resource: "org.hyperledger.composer.system.HistorianRecord"
  action: ALLOW
}

rule WillReadPermissionToWillOwner{
  description: "Can perform all will resources"
  participant(p): "org.sample.management.will.participant.WillOwner"
  operation: READ
  resource(r): "org.sample.management.will.Will"
  condition:(r.owner.getIdentifier() == p.getIdentifier())
  action: ALLOW
}

rule LegalCustodianListPermissionToWillOwner{
  description: "Can perform all will resources"
  participant: "org.sample.management.will.participant.WillOwner"
  operation: READ
  resource: "org.sample.management.will.participant.LegalCustodian"
  action: ALLOW
}

rule JudicialOfficerListPermissionToWillOwner{
  description: "Can perform all will resources"
  participant: "org.sample.management.will.participant.WillOwner"
  operation: READ
  resource: "org.sample.management.will.participant.JudicialOfficer"
  action: ALLOW
}

rule JudicialOfficerListPermissionToLegalCustodian{
  description: "Can perform all will resources"
  participant: "org.sample.management.will.participant.LegalCustodian"
  operation: READ
  resource: "org.sample.management.will.participant.JudicialOfficer"
  action: ALLOW
}

rule WillReadPermissionToLegalCustodian{
  description: "Can perform all will resources"
  participant(p): "org.sample.management.will.participant.LegalCustodian"
  operation: READ
  resource(r): "org.sample.management.will.Will"
  condition:(r.legalCustodian.getIdentifier() == p.getIdentifier())
  action: ALLOW
}

rule WillReadPermissionToJudicialOfficer{
  description: "Can perform all will resources"
  participant(p): "org.sample.management.will.participant.JudicialOfficer"
  operation: READ
  resource(r): "org.sample.management.will.Will"
  condition:(r.judicialOfficer.getIdentifier() == p.getIdentifier())
  action: ALLOW
}

rule CreateWillTransactionPermissionToWillOwner{
	  description: "Grant CreateWill transaction permission to willowner"
  	participant: "org.sample.management.will.participant.WillOwner"
    operation: CREATE
    resource: "org.sample.management.will.CreateWill"
  	action: ALLOW
}

rule UpdateWillTransactionPermissionToWillOwner{
    description: "Grant CreateWill transaction permission to willowner"
  	participant: "org.sample.management.will.participant.WillOwner"
    operation: CREATE
    resource: "org.sample.management.will.UpdateWill"
  	action: ALLOW
}

rule DeleteWillTransactionPermissionToWillOwner{
    description: "Grant CreateWill transaction permission to willowner"
  	participant: "org.sample.management.will.participant.WillOwner"
    operation: CREATE
    resource: "org.sample.management.will.DeleteWill"
  	action: ALLOW
}

rule WillCreatePermissionToWillOwner{
    description: "Grant will all permission to will owner"
    participant(p): "org.sample.management.will.participant.WillOwner"
    operation: CREATE
    resource(r): "org.sample.management.will.Will"
    transaction(tx): "org.sample.management.will.CreateWill"
    condition:(true)
    action: ALLOW
}

rule WillUpdatePermissionToWillOwner{
    description: "Grant will all permission to will owner"
    participant(p): "org.sample.management.will.participant.WillOwner"
    operation: UPDATE
    resource(r): "org.sample.management.will.Will"
    transaction(tx): "org.sample.management.will.UpdateWill"
    condition:(p.getIdentifier() == r.owner.getIdentifier())
    action: ALLOW
}

rule WillDeletePermissionToWillOwner{
    description: "Grant will all permission to will owner"
    participant(p): "org.sample.management.will.participant.WillOwner"
    operation: UPDATE
    resource(r): "org.sample.management.will.Will"
    transaction(tx): "org.sample.management.will.DeleteWill"
    condition:(p.getIdentifier() == r.owner.getIdentifier())
    action: ALLOW
}

rule RejectWillAsLegalCustodianTransactionPermission{
    description: "Grant will update permission to will owner"
    participant: "org.sample.management.will.participant.LegalCustodian"
    operation: CREATE
    resource: "org.sample.management.will.RejectWillAsLegalCustodian"
    action: ALLOW
}

rule WillRejectPermissionToLegalCustodian{
    description: "Grant will update permission to will owner"
    participant(p): "org.sample.management.will.participant.LegalCustodian"
    operation: UPDATE
    resource(r): "org.sample.management.will.Will"
    transaction: "org.sample.management.will.RejectWillAsLegalCustodian"
    condition: (r.legalCustodian.getIdentifier() == p.getIdentifier() && (r.status == "APPROVAL_REQUEST_TO_LEGAL_CUSTODIAN" || r.status == "REJECTED_BY_JUDICIAL_OFFICER"))
    action: ALLOW
}

rule ApproveWillAsLegalCustodianTransactionPermission{
    description: "Grant will approve transaction creation permission to legal custodian"
    participant: "org.sample.management.will.participant.LegalCustodian"
    operation: CREATE
    resource: "org.sample.management.will.ApproveWillAsLegalCustodian"
    action: ALLOW
}

rule WillApprovePermissionToLegalCustodian{
    description: "Grant will approve permission to legal custodian"
    participant(p): "org.sample.management.will.participant.LegalCustodian"
    operation: UPDATE
    resource(r): "org.sample.management.will.Will"
    transaction: "org.sample.management.will.ApproveWillAsLegalCustodian"
    condition: (r.legalCustodian.getIdentifier() == p.getIdentifier() && (r.status == "APPROVAL_REQUEST_TO_LEGAL_CUSTODIAN" || r.status == "REJECTED_BY_JUDICIAL_OFFICER"))
    action: ALLOW
}

rule ApproveWillAsJudicialOfficerTransactionPermission{
    description: "Grant will approve transaction creation permission to legal custodian"
    participant: "org.sample.management.will.participant.JudicialOfficer"
    operation: CREATE
    resource: "org.sample.management.will.ApproveWillAsJudicialOfficer"
    action: ALLOW
}


rule WillApprovePermissionToJudicialOfficer{
    description: "Grant will update permission to will owner"
    participant(p): "org.sample.management.will.participant.JudicialOfficer"
    operation: UPDATE
    resource(r): "org.sample.management.will.Will"
    transaction: "org.sample.management.will.ApproveWillAsJudicialOfficer"
    condition: (r.judicialOfficer.getIdentifier() == p.getIdentifier() && r.status == "APPROVAL_REQUEST_TO_JUDICIAL_OFFICER")
    action: ALLOW
}

rule RejectWillAsJudicialOfficerTransactionPermission{
    description: "Grant will approve transaction creation permission to legal custodian"
    participant: "org.sample.management.will.participant.JudicialOfficer"
    operation: CREATE
    resource: "org.sample.management.will.RejectWillAsJudicialOfficer"
    action: ALLOW
}

rule WillRejectPermissionToJudicialOfficer{
    description: "Grant will update permission to will owner"
    participant(p): "org.sample.management.will.participant.JudicialOfficer"
    operation: UPDATE
    resource(r): "org.sample.management.will.Will"
    transaction: "org.sample.management.will.RejectWillAsJudicialOfficer"
    condition: (r.judicialOfficer.getIdentifier() == p.getIdentifier() && r.status == "APPROVAL_REQUEST_TO_JUDICIAL_OFFICER")
    action: ALLOW
}
